Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> operation
Rule 1     operation -> object_list parameter_list
Rule 2     operation -> object_list
Rule 3     object_list -> OBJECT
Rule 4     object_list -> object_list PERIOD OBJECT
Rule 5     parameter_list -> parameter
Rule 6     parameter_list -> parameter_list parameter
Rule 7     parameter -> member
Rule 8     list -> LBRACKET members RBRACKET
Rule 9     tuple -> LPAREN members RPAREN
Rule 10    members -> member
Rule 11    members -> members COMMA member
Rule 12    member -> NUMBER
Rule 13    member -> string
Rule 14    member -> BOOL
Rule 15    member -> list
Rule 16    member -> tuple
Rule 17    string -> STRING

Terminals, with rules where they appear

BOOL                 : 14
COMMA                : 11
LBRACKET             : 8
LPAREN               : 9
NUMBER               : 12
OBJECT               : 3 4
PERIOD               : 4
RBRACKET             : 8
RPAREN               : 9
STRING               : 17
error                : 

Nonterminals, with rules where they appear

list                 : 15
member               : 7 10 11
members              : 8 9 11
object_list          : 1 2 4
operation            : 0
parameter            : 5 6
parameter_list       : 1 6
string               : 13
tuple                : 16

Parsing method: LALR

state 0

    (0) S' -> . operation
    (1) operation -> . object_list parameter_list
    (2) operation -> . object_list
    (3) object_list -> . OBJECT
    (4) object_list -> . object_list PERIOD OBJECT

    OBJECT          shift and go to state 1

    operation                      shift and go to state 2
    object_list                    shift and go to state 3

state 1

    (3) object_list -> OBJECT .

    PERIOD          reduce using rule 3 (object_list -> OBJECT .)
    NUMBER          reduce using rule 3 (object_list -> OBJECT .)
    BOOL            reduce using rule 3 (object_list -> OBJECT .)
    STRING          reduce using rule 3 (object_list -> OBJECT .)
    LBRACKET        reduce using rule 3 (object_list -> OBJECT .)
    LPAREN          reduce using rule 3 (object_list -> OBJECT .)
    $end            reduce using rule 3 (object_list -> OBJECT .)


state 2

    (0) S' -> operation .



state 3

    (1) operation -> object_list . parameter_list
    (2) operation -> object_list .
    (4) object_list -> object_list . PERIOD OBJECT
    (5) parameter_list -> . parameter
    (6) parameter_list -> . parameter_list parameter
    (7) parameter -> . member
    (12) member -> . NUMBER
    (13) member -> . string
    (14) member -> . BOOL
    (15) member -> . list
    (16) member -> . tuple
    (17) string -> . STRING
    (8) list -> . LBRACKET members RBRACKET
    (9) tuple -> . LPAREN members RPAREN

    $end            reduce using rule 2 (operation -> object_list .)
    PERIOD          shift and go to state 9
    NUMBER          shift and go to state 10
    BOOL            shift and go to state 12
    STRING          shift and go to state 15
    LBRACKET        shift and go to state 4
    LPAREN          shift and go to state 13

    string                         shift and go to state 5
    parameter_list                 shift and go to state 6
    tuple                          shift and go to state 7
    list                           shift and go to state 8
    member                         shift and go to state 11
    parameter                      shift and go to state 14

state 4

    (8) list -> LBRACKET . members RBRACKET
    (10) members -> . member
    (11) members -> . members COMMA member
    (12) member -> . NUMBER
    (13) member -> . string
    (14) member -> . BOOL
    (15) member -> . list
    (16) member -> . tuple
    (17) string -> . STRING
    (8) list -> . LBRACKET members RBRACKET
    (9) tuple -> . LPAREN members RPAREN

    NUMBER          shift and go to state 10
    BOOL            shift and go to state 12
    STRING          shift and go to state 15
    LBRACKET        shift and go to state 4
    LPAREN          shift and go to state 13

    member                         shift and go to state 16
    list                           shift and go to state 8
    string                         shift and go to state 5
    members                        shift and go to state 17
    tuple                          shift and go to state 7

state 5

    (13) member -> string .

    NUMBER          reduce using rule 13 (member -> string .)
    BOOL            reduce using rule 13 (member -> string .)
    STRING          reduce using rule 13 (member -> string .)
    LBRACKET        reduce using rule 13 (member -> string .)
    LPAREN          reduce using rule 13 (member -> string .)
    $end            reduce using rule 13 (member -> string .)
    RBRACKET        reduce using rule 13 (member -> string .)
    COMMA           reduce using rule 13 (member -> string .)
    RPAREN          reduce using rule 13 (member -> string .)


state 6

    (1) operation -> object_list parameter_list .
    (6) parameter_list -> parameter_list . parameter
    (7) parameter -> . member
    (12) member -> . NUMBER
    (13) member -> . string
    (14) member -> . BOOL
    (15) member -> . list
    (16) member -> . tuple
    (17) string -> . STRING
    (8) list -> . LBRACKET members RBRACKET
    (9) tuple -> . LPAREN members RPAREN

    $end            reduce using rule 1 (operation -> object_list parameter_list .)
    NUMBER          shift and go to state 10
    BOOL            shift and go to state 12
    STRING          shift and go to state 15
    LBRACKET        shift and go to state 4
    LPAREN          shift and go to state 13

    string                         shift and go to state 5
    tuple                          shift and go to state 7
    list                           shift and go to state 8
    member                         shift and go to state 11
    parameter                      shift and go to state 18

state 7

    (16) member -> tuple .

    NUMBER          reduce using rule 16 (member -> tuple .)
    BOOL            reduce using rule 16 (member -> tuple .)
    STRING          reduce using rule 16 (member -> tuple .)
    LBRACKET        reduce using rule 16 (member -> tuple .)
    LPAREN          reduce using rule 16 (member -> tuple .)
    $end            reduce using rule 16 (member -> tuple .)
    RBRACKET        reduce using rule 16 (member -> tuple .)
    COMMA           reduce using rule 16 (member -> tuple .)
    RPAREN          reduce using rule 16 (member -> tuple .)


state 8

    (15) member -> list .

    NUMBER          reduce using rule 15 (member -> list .)
    BOOL            reduce using rule 15 (member -> list .)
    STRING          reduce using rule 15 (member -> list .)
    LBRACKET        reduce using rule 15 (member -> list .)
    LPAREN          reduce using rule 15 (member -> list .)
    $end            reduce using rule 15 (member -> list .)
    RBRACKET        reduce using rule 15 (member -> list .)
    COMMA           reduce using rule 15 (member -> list .)
    RPAREN          reduce using rule 15 (member -> list .)


state 9

    (4) object_list -> object_list PERIOD . OBJECT

    OBJECT          shift and go to state 19


state 10

    (12) member -> NUMBER .

    NUMBER          reduce using rule 12 (member -> NUMBER .)
    BOOL            reduce using rule 12 (member -> NUMBER .)
    STRING          reduce using rule 12 (member -> NUMBER .)
    LBRACKET        reduce using rule 12 (member -> NUMBER .)
    LPAREN          reduce using rule 12 (member -> NUMBER .)
    $end            reduce using rule 12 (member -> NUMBER .)
    RBRACKET        reduce using rule 12 (member -> NUMBER .)
    COMMA           reduce using rule 12 (member -> NUMBER .)
    RPAREN          reduce using rule 12 (member -> NUMBER .)


state 11

    (7) parameter -> member .

    NUMBER          reduce using rule 7 (parameter -> member .)
    BOOL            reduce using rule 7 (parameter -> member .)
    STRING          reduce using rule 7 (parameter -> member .)
    LBRACKET        reduce using rule 7 (parameter -> member .)
    LPAREN          reduce using rule 7 (parameter -> member .)
    $end            reduce using rule 7 (parameter -> member .)


state 12

    (14) member -> BOOL .

    NUMBER          reduce using rule 14 (member -> BOOL .)
    BOOL            reduce using rule 14 (member -> BOOL .)
    STRING          reduce using rule 14 (member -> BOOL .)
    LBRACKET        reduce using rule 14 (member -> BOOL .)
    LPAREN          reduce using rule 14 (member -> BOOL .)
    $end            reduce using rule 14 (member -> BOOL .)
    RBRACKET        reduce using rule 14 (member -> BOOL .)
    COMMA           reduce using rule 14 (member -> BOOL .)
    RPAREN          reduce using rule 14 (member -> BOOL .)


state 13

    (9) tuple -> LPAREN . members RPAREN
    (10) members -> . member
    (11) members -> . members COMMA member
    (12) member -> . NUMBER
    (13) member -> . string
    (14) member -> . BOOL
    (15) member -> . list
    (16) member -> . tuple
    (17) string -> . STRING
    (8) list -> . LBRACKET members RBRACKET
    (9) tuple -> . LPAREN members RPAREN

    NUMBER          shift and go to state 10
    BOOL            shift and go to state 12
    STRING          shift and go to state 15
    LBRACKET        shift and go to state 4
    LPAREN          shift and go to state 13

    member                         shift and go to state 16
    list                           shift and go to state 8
    string                         shift and go to state 5
    members                        shift and go to state 20
    tuple                          shift and go to state 7

state 14

    (5) parameter_list -> parameter .

    NUMBER          reduce using rule 5 (parameter_list -> parameter .)
    BOOL            reduce using rule 5 (parameter_list -> parameter .)
    STRING          reduce using rule 5 (parameter_list -> parameter .)
    LBRACKET        reduce using rule 5 (parameter_list -> parameter .)
    LPAREN          reduce using rule 5 (parameter_list -> parameter .)
    $end            reduce using rule 5 (parameter_list -> parameter .)


state 15

    (17) string -> STRING .

    RBRACKET        reduce using rule 17 (string -> STRING .)
    COMMA           reduce using rule 17 (string -> STRING .)
    NUMBER          reduce using rule 17 (string -> STRING .)
    BOOL            reduce using rule 17 (string -> STRING .)
    STRING          reduce using rule 17 (string -> STRING .)
    LBRACKET        reduce using rule 17 (string -> STRING .)
    LPAREN          reduce using rule 17 (string -> STRING .)
    $end            reduce using rule 17 (string -> STRING .)
    RPAREN          reduce using rule 17 (string -> STRING .)


state 16

    (10) members -> member .

    RPAREN          reduce using rule 10 (members -> member .)
    COMMA           reduce using rule 10 (members -> member .)
    RBRACKET        reduce using rule 10 (members -> member .)


state 17

    (8) list -> LBRACKET members . RBRACKET
    (11) members -> members . COMMA member

    RBRACKET        shift and go to state 21
    COMMA           shift and go to state 22


state 18

    (6) parameter_list -> parameter_list parameter .

    NUMBER          reduce using rule 6 (parameter_list -> parameter_list parameter .)
    BOOL            reduce using rule 6 (parameter_list -> parameter_list parameter .)
    STRING          reduce using rule 6 (parameter_list -> parameter_list parameter .)
    LBRACKET        reduce using rule 6 (parameter_list -> parameter_list parameter .)
    LPAREN          reduce using rule 6 (parameter_list -> parameter_list parameter .)
    $end            reduce using rule 6 (parameter_list -> parameter_list parameter .)


state 19

    (4) object_list -> object_list PERIOD OBJECT .

    PERIOD          reduce using rule 4 (object_list -> object_list PERIOD OBJECT .)
    NUMBER          reduce using rule 4 (object_list -> object_list PERIOD OBJECT .)
    BOOL            reduce using rule 4 (object_list -> object_list PERIOD OBJECT .)
    STRING          reduce using rule 4 (object_list -> object_list PERIOD OBJECT .)
    LBRACKET        reduce using rule 4 (object_list -> object_list PERIOD OBJECT .)
    LPAREN          reduce using rule 4 (object_list -> object_list PERIOD OBJECT .)
    $end            reduce using rule 4 (object_list -> object_list PERIOD OBJECT .)


state 20

    (9) tuple -> LPAREN members . RPAREN
    (11) members -> members . COMMA member

    RPAREN          shift and go to state 23
    COMMA           shift and go to state 22


state 21

    (8) list -> LBRACKET members RBRACKET .

    RPAREN          reduce using rule 8 (list -> LBRACKET members RBRACKET .)
    COMMA           reduce using rule 8 (list -> LBRACKET members RBRACKET .)
    NUMBER          reduce using rule 8 (list -> LBRACKET members RBRACKET .)
    BOOL            reduce using rule 8 (list -> LBRACKET members RBRACKET .)
    STRING          reduce using rule 8 (list -> LBRACKET members RBRACKET .)
    LBRACKET        reduce using rule 8 (list -> LBRACKET members RBRACKET .)
    LPAREN          reduce using rule 8 (list -> LBRACKET members RBRACKET .)
    $end            reduce using rule 8 (list -> LBRACKET members RBRACKET .)
    RBRACKET        reduce using rule 8 (list -> LBRACKET members RBRACKET .)


state 22

    (11) members -> members COMMA . member
    (12) member -> . NUMBER
    (13) member -> . string
    (14) member -> . BOOL
    (15) member -> . list
    (16) member -> . tuple
    (17) string -> . STRING
    (8) list -> . LBRACKET members RBRACKET
    (9) tuple -> . LPAREN members RPAREN

    NUMBER          shift and go to state 10
    BOOL            shift and go to state 12
    STRING          shift and go to state 15
    LBRACKET        shift and go to state 4
    LPAREN          shift and go to state 13

    member                         shift and go to state 24
    list                           shift and go to state 8
    string                         shift and go to state 5
    tuple                          shift and go to state 7

state 23

    (9) tuple -> LPAREN members RPAREN .

    RBRACKET        reduce using rule 9 (tuple -> LPAREN members RPAREN .)
    COMMA           reduce using rule 9 (tuple -> LPAREN members RPAREN .)
    RPAREN          reduce using rule 9 (tuple -> LPAREN members RPAREN .)
    NUMBER          reduce using rule 9 (tuple -> LPAREN members RPAREN .)
    BOOL            reduce using rule 9 (tuple -> LPAREN members RPAREN .)
    STRING          reduce using rule 9 (tuple -> LPAREN members RPAREN .)
    LBRACKET        reduce using rule 9 (tuple -> LPAREN members RPAREN .)
    LPAREN          reduce using rule 9 (tuple -> LPAREN members RPAREN .)
    $end            reduce using rule 9 (tuple -> LPAREN members RPAREN .)


state 24

    (11) members -> members COMMA member .

    RPAREN          reduce using rule 11 (members -> members COMMA member .)
    COMMA           reduce using rule 11 (members -> members COMMA member .)
    RBRACKET        reduce using rule 11 (members -> members COMMA member .)

